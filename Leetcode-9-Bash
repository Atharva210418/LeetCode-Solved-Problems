 /* Valid Phone Numbers-
 
 Given a text file file.txt that contains a list of phone numbers (one per line), write a one-liner bash script to print all valid phone numbers.

You may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)

You may also assume each line in the text file must not contain leading or trailing white spaces.

Example:

Assume that file.txt has the following content:

987-123-4567
123 456 7890
(123) 456-7890
Your script should output the following valid phone numbers:

987-123-4567
(123) 456-7890  */


Script-

grep -e "^[0-9]\{3\}\-[0-9]\{3\}\-[0-9]\{4\}$" -e "^([0-9]\{3\}) [0-9]\{3\}\-[0-9]\{4\}$" file.txt

Explanation-
this is a grep command accepting two regular expressions
1 .^[0-9]\{3\}\-[0-9]\{3\}\-[0-9]\{4\}$
2 .^([0-9]\{3\}) [0-9]\{3\}\-[0-9]\{4\}$

The construction is as follows

^: indicates the starting of the string
$: indicates the end of the string
[0-9]\{3\} : represent 3 numbers (\{3\}) between the range 0-9 ([0-9] a digit in the range)
\: suppresses the specialness of the character
-e: to include multiple regex
